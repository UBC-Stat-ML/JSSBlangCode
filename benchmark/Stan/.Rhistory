y <- f(1, x)
plot(y~x, type='l')
t <- function(theta) {
return (-sin(theta)^2*x)
}
eta <- function(x) {
return (x)
}
g <- function(theta) {
return (1)
}
f <- function(theta, x){
return (g(theta) * exp(eta(theta)*t(x)))
}
x <- seq(-50,50, by=0.01)
y <- f(1, x)
plot(y~x, type='l')
t <- function(theta) {
return (-sin(theta)^2*theta)
}
eta <- function(x) {
return (x)
}
g <- function(theta) {
return (1)
}
f <- function(theta, x){
return (g(theta) * exp(eta(theta)*t(x)))
}
x <- seq(-50,50, by=0.01)
y <- f(1, x)
plot(y~x, type='l')
t <- function(theta) {
return (-sin(theta)^2*theta)
}
eta <- function(x) {
return (x)
}
g <- function(theta) {
return (1)
}
f <- function(theta, x){
return (g(theta) * exp(eta(theta)*t(x)))
}
x <- seq(-50,50, by=0.01)
y <- f(1, x)
plot(y~x, type='l')
t <- function(theta) {
return (-sin(theta)^2*theta)
}
eta <- function(x) {
return (x)
}
g <- function(theta) {
return (1)
}
f <- function(theta, x){
return (g(theta) * exp(eta(theta)*t(x)))
}
x <- seq(-50,50, by=0.01)
y <- f(1, x)
plot(y~x, type='l')
t <- function(x) {
return (-sin(x)^2*x)
}
eta <- function(theta) {
return (theta)
}
g <- function(theta) {
return (1)
}
f <- function(theta, x){
return (g(theta) * exp(eta(theta)*t(x)))
}
x <- seq(-50,50, by=0.01)
y <- f(1, x)
plot(y~x, type='l')
test <- function(x) {
return (exp (- sin(x) ^ 2))
}
x <- seq(-50,50, by=0.01)
x <- seq(-50,50, by=0.01)
y <- test(x)
test <- function(x) {
return (exp (- sin(x) ^ 2))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp (- sin(x) ^ 2*x))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp (- sin(x) ^ 2*x^2))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp (- sin(x)^2*(x^2)))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp (- sin(x)^2*(abs(x))))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(- sin(x)^2*(abs(x^3))))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
return (exp(- sin(x)^2*(x^2)))
test <- function(x) {
return (exp(- sin(x)^2*(x^2)))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(- sin(x)^2*(x^2))/30)
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(- sin(x)^2*(x^2)))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
lines(x = 0.3)
lines(x = 0.3, col='red')
lines(x = 1.3, col='red')
lines(x = 3, col='red')
lines(x = 4, col='red')
lines(x = 3, y=3, col='red')
lines(x = 3, y=4, col='red')
lines(x = 3, y=0.3, col='red')
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
lines(x = 3, y=0.3, col='red')
return (g(theta) * exp(eta(theta)*t(x)))
f <- function(theta, x){
return (g(theta) * exp(eta(theta)*t(x)))
}
test <- function(x) {
return (exp(- sin(x)^2*(x^2)))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(- sin(x)^2*(x)))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
x <- seq(-500,500, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(- sin(x)^2*(x^2)))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(- sin(x+1)^2*(x^2)))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(- sin(x^2)^2*(x^2)))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
f <- function(theta, x){
return (g(theta) * exp(eta(theta)*t(x)))
}
test <- function(x) {
return (exp(- sin(x)^2*(x^2)))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(- sin(x^2+0.5)^2*(x^2)))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(- sin(4x^2+0.5)^2*(x^2)))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(- sin((10x)^2+0.5)^2*(x^2)))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(- sin((0.1*x)^2+0.5)^2*(x^2)))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(- sin((0.1*x)^2+0.1)^2*(x^2)))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(- sin((x)^2+0.4)^2*(x^2)))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(- sin((0.3*x)^2+0.4)^2*(x^2)))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(- sin((0.1*x)^2+0.4)^2*(x^2)))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(- sin((0.1*x)^2+0.4)^2*(x^2)))
}
x <- seq(-5,5, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(- sin((0.3*x)^2+0.4)^2*(x^2)))
}
x <- seq(-5,5, by=0.01)
y <- test(x)
plot(y~x, type='l')
f <- function(theta, x){
return (g(theta) * exp(eta(theta)*t(x)))
}
test <- function(x) {
return (exp(- sin((0.5*x)^2+0.4)^2*(x^2)))
}
x <- seq(-5,5, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(- sin((0.5*x)^2+0.5)^2*(x^2)))
}
x <- seq(-5,5, by=0.01)
y <- test(x)
plot(y~x, type='l')
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-x^2/2/9))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-sin(x)^2/2/9))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-x^2/2/9))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-(x^2+sin(x))/2/9))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-(x^2+sin(x))/2/9))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-((x^2)+sin(x))/2/9))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-((x^2)+sin(x))/2/9))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-(x^2)/2/9))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-(x^2*sin(x))/2/9))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-(x^2)/2/9))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-(x^2)/2/9) * sin(abs(x)))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-(x^2)/2/9) * abs(sin(x)))
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-(x^2)/2/9) * sin(x)^2)
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-(x^2)/2/9) * sin(x)^2)
}
x <- seq(-50,50, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-(x^2)/2/9) * sin(x)^2)
}
x <- seq(-5,5, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-(x^2)/2/9) * sin(x)^2)
}
x <- seq(-25,25, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-(x^2)/2/9) * sin(5x)^2)
}
x <- seq(-25,25, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-(x^2)/2/9) * sin(5x)^2)
}
x <- seq(-25,25, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-(x^2)/2/9) * sin(x)^2)
}
x <- seq(-25,25, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-(x^2)/2/9) * sin(x)^2)
}
x <- seq(-25,25, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-((x-5)^2)/2/9) * sin(x)^2)
}
x <- seq(-25,25, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-((x-5)^2)/2/9) * sin(x-5)^2)
}
x <- seq(-25,25, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-((x)^2)/2/9) * sin(x)^2)
}
x <- seq(-25,25, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-((x)^2)/2/9) * sin(x*10)^2)
}
x <- seq(-25,25, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-((x)^2)/2/9) * sin(x*2)^2)
}
x <- seq(-25,25, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-((x)^2)/2/9) * 7*sin(x*2)^2)
}
x <- seq(-25,25, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-((x)^2)/2/9) * sin(x*2)^2)
}
x <- seq(-25,25, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-((x)^2)/2/9) * sin(x*0.3)^2)
}
x <- seq(-25,25, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-((x)^2)/2/9) * sin(x*0.3)^2)
}
x <- seq(-250,250, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-((x)^2)/2/9) * sin(x*0.3)^2)
}
x <- seq(-25,25, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-((x-5)^2)/2/9) * sin(x*0.3)^2)
}
x <- seq(-25,25, by=0.01)
y <- test(x)
plot(y~x, type='l')
f <- function(theta, x){
return (g(theta) * exp(eta(theta)*t(x)))
}
test <- function(x) {
return (exp(-((x)^2)/2/9) * sin(x*0.3)^2)
}
x <- seq(-25,25, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-((x)^2)/2/9) * sin(x/4)^2)
}
x <- seq(-25,25, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-((x)^2)/2/9) * sin(x/10)^2)
}
x <- seq(-25,25, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-((x)^2)/2/9) * sin(x/20)^2)
}
x <- seq(-25,25, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-((x)^2)/2/9) * sin(x/0.3)^2)
}
x <- seq(-25,25, by=0.01)
y <- test(x)
plot(y~x, type='l')
test <- function(x) {
return (exp(-((x)^2)/2/9) * sin(x/3)^2)
}
x <- seq(-25,25, by=0.01)
y <- test(x)
plot(y~x, type='l')
data <- read.csv("../data/mixture_data.csv")
test = stan(file = "mixture.stan", model_name = "Mixture",
data = standat, iter = 7000, warmup=2000, thin=5, chains = 2, cores=2,
verbose = F)
setwd("blang/JSSBlangCode/benchmark/Stan/")
library(rstan)
data <- read.csv("../data/mixture_data.csv")
test = stan(file = "mixture.stan", model_name = "Mixture",
data = standat, iter = 7000, warmup=2000, thin=5, chains = 2, cores=2,
verbose = F)
